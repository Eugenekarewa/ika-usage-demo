import { ByteViews, ContainerNodeStructType, ValueOfFields } from "@chainsafe/ssz";
export declare const ValidatorType: {
    pubkey: import("@chainsafe/ssz").ByteVectorType;
    withdrawalCredentials: import("@chainsafe/ssz").ByteVectorType;
    effectiveBalance: import("@chainsafe/ssz").UintNumberType;
    slashed: import("@chainsafe/ssz").BooleanType;
    activationEligibilityEpoch: import("@chainsafe/ssz").UintNumberType;
    activationEpoch: import("@chainsafe/ssz").UintNumberType;
    exitEpoch: import("@chainsafe/ssz").UintNumberType;
    withdrawableEpoch: import("@chainsafe/ssz").UintNumberType;
};
/**
 * Improve serialization performance for state.validators.serialize();
 */
export declare class ValidatorNodeStructType extends ContainerNodeStructType<typeof ValidatorType> {
    constructor();
    value_serializeToBytes({ uint8Array: output, dataView }: ByteViews, offset: number, validator: ValueOfFields<typeof ValidatorType>): number;
}
export declare const ValidatorNodeStruct: ValidatorNodeStructType;
//# sourceMappingURL=validator.d.ts.map