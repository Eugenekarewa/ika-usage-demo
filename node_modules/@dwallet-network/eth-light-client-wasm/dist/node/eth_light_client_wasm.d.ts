/* tslint:disable */
/* eslint-disable */
/**
 * Retrieves the initial state of the Ethereum light client using BCS serialization.
 *
 * This function takes in several JavaScript values, deserializes them into Rust types,
 * and initializes the Ethereum light client state. It then serializes the state back
 * into a JavaScript value for further use.
 *
 * # Arguments
 *
 * * `checkpoint` - A `JsValue` representing the checkpoint in hexadecimal format.
 * * `rpc` - A `JsValue` representing the RPC endpoint as a string.
 * * `network` - A `JsValue` representing the network as a string.
 * * `bootstrap` - A `JsValue` representing the bootstrap configuration.
 *
 * # Returns
 *
 * A `Result` containing a `JsValue` with the serialized Ethereum state value or a `JsErr` on failure.
 * @param {any} checkpoint
 * @param {any} rpc
 * @param {any} network
 * @param {any} bootstrap
 * @returns {any}
 */
export function get_initial_state_bcs(checkpoint: any, rpc: any, network: any, bootstrap: any): any;
/**
 * Calculates the current finalized period of the Ethereum light client state.
 * @param {any} state_bytes
 * @returns {any}
 */
export function get_current_period(state_bytes: any): any;
/**
 * @param {any} proof
 * @param {any} contract_address
 * @param {any} message
 * @param {any} dwallet_id
 * @param {any} data_slot
 * @param {any} state_root
 * @returns {boolean}
 */
export function try_verify_proof(proof: any, contract_address: any, message: any, dwallet_id: any, data_slot: any, state_root: any): boolean;
