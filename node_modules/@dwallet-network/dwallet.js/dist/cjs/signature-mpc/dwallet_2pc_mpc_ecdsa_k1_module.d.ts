import type { DWalletClient } from '../client/index.js';
import type { Keypair } from '../cryptography/index.js';
export { decrypt_user_share, generate_keypair, generate_proof, generate_keypair_from_seed, } from '@dwallet-network/signature-mpc-wasm';
export type CreatedDwallet = {
    dwalletID: string;
    centralizedDKGOutput: number[];
    decentralizedDKGOutput: number[];
    dwalletCapID: string;
    secretKeyShare: number[];
    encryptedSecretShareObjID: string;
};
export declare function createDWallet(keypair: Keypair, client: DWalletClient, encryptionKey: Uint8Array, encryptionKeyObjId: string): Promise<CreatedDwallet | null>;
export type DWallet = {
    dwalletID: string;
    decentralizedDKGOutput: number[];
    dwalletCapID: string;
};
export declare function createPartialUserSignedMessages(dwalletID: string, decentralizedDKGOutput: number[], secretKeyShare: Uint8Array, messages: Uint8Array[], hash: 'KECCAK256' | 'SHA256', keypair: Keypair, client: DWalletClient): Promise<string | null>;
