{
  "version": 3,
  "sources": ["../../../src/signature-mpc/utils.ts"],
  "sourcesContent": ["// Copyright (c) dWallet Labs, Ltd.\n// SPDX-License-Identifier: BSD-3-Clause-Clear\n\nimport { generate_keypair_from_seed } from '@dwallet-network/signature-mpc-wasm';\nimport { ethers, keccak256 } from 'ethers';\n\nimport type { DWalletClient } from '../client/index.js';\nimport type { Keypair } from '../cryptography/index.js';\nimport type { Ed25519Keypair } from '../keypairs/ed25519/index.js';\n\nexport async function fetchObjectBySessionId(\n\tsessionId: string,\n\ttype: string,\n\tkeypair: Keypair,\n\tclient: DWalletClient,\n) {\n\tlet cursor = null;\n\tfor (;;) {\n\t\tconst objects = await client.getOwnedObjects({ owner: keypair.toSuiAddress(), cursor: cursor });\n\t\tconst objectsContent = await client.multiGetObjects({\n\t\t\tids: objects.data.map((o) => o.data?.objectId!),\n\t\t\toptions: { showContent: true },\n\t\t});\n\n\t\tconst objectsFiltered = objectsContent\n\t\t\t.map((o) => o.data?.content)\n\t\t\t.filter((o) => {\n\t\t\t\treturn (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\to?.dataType === 'moveObject' && o?.type === type && o.fields['session_id'] === sessionId\n\t\t\t\t);\n\t\t\t});\n\t\tif (objectsFiltered.length > 0) {\n\t\t\treturn objectsFiltered[0];\n\t\t} else if (objects.hasNextPage) {\n\t\t\tcursor = objects.nextCursor;\n\t\t} else {\n\t\t\tcursor = null;\n\t\t}\n\t\tawait new Promise((r) => setTimeout(r, 500));\n\t}\n}\n\nexport async function fetchOwnedObjectByType(\n\ttype: string,\n\tkeypair: Keypair,\n\tclient: DWalletClient,\n) {\n\tlet cursor = null;\n\tfor (;;) {\n\t\tconst objects = await client.getOwnedObjects({ owner: keypair.toSuiAddress(), cursor: cursor });\n\t\tconst objectsContent = await client.multiGetObjects({\n\t\t\tids: objects.data.map((o) => o.data?.objectId!),\n\t\t\toptions: { showContent: true },\n\t\t});\n\n\t\tconst objectsFiltered = objectsContent\n\t\t\t.map((o) => o.data?.content)\n\t\t\t.filter((o) => {\n\t\t\t\treturn (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\to?.dataType === 'moveObject' && o?.type === type\n\t\t\t\t);\n\t\t\t});\n\t\tif (objectsFiltered.length > 0) {\n\t\t\treturn objectsFiltered[0];\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport const generatePaillierKeyPairFromSuiKeyPair = (keypair: Ed25519Keypair): Uint8Array[] => {\n\tlet stringHashedPK = keccak256(ethers.toUtf8Bytes(keypair.export().privateKey));\n\tlet hashedPrivateKey = ethers.toBeArray(stringHashedPK);\n\treturn generate_keypair_from_seed(hashedPrivateKey);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,gCAA2C;AAC3C,oBAAkC;AAMlC,eAAsB,uBACrB,WACA,MACA,SACA,QACC;AACD,MAAI,SAAS;AACb,aAAS;AACR,UAAM,UAAU,MAAM,OAAO,gBAAgB,EAAE,OAAO,QAAQ,aAAa,GAAG,OAAe,CAAC;AAC9F,UAAM,iBAAiB,MAAM,OAAO,gBAAgB;AAAA,MACnD,KAAK,QAAQ,KAAK,IAAI,CAAC,MAAM,EAAE,MAAM,QAAS;AAAA,MAC9C,SAAS,EAAE,aAAa,KAAK;AAAA,IAC9B,CAAC;AAED,UAAM,kBAAkB,eACtB,IAAI,CAAC,MAAM,EAAE,MAAM,OAAO,EAC1B,OAAO,CAAC,MAAM;AACd;AAAA;AAAA,QAEC,GAAG,aAAa,gBAAgB,GAAG,SAAS,QAAQ,EAAE,OAAO,YAAY,MAAM;AAAA;AAAA,IAEjF,CAAC;AACF,QAAI,gBAAgB,SAAS,GAAG;AAC/B,aAAO,gBAAgB,CAAC;AAAA,IACzB,WAAW,QAAQ,aAAa;AAC/B,eAAS,QAAQ;AAAA,IAClB,OAAO;AACN,eAAS;AAAA,IACV;AACA,UAAM,IAAI,QAAQ,CAAC,MAAM,WAAW,GAAG,GAAG,CAAC;AAAA,EAC5C;AACD;AAEA,eAAsB,uBACrB,MACA,SACA,QACC;AACD,MAAI,SAAS;AACb,aAAS;AACR,UAAM,UAAU,MAAM,OAAO,gBAAgB,EAAE,OAAO,QAAQ,aAAa,GAAG,OAAe,CAAC;AAC9F,UAAM,iBAAiB,MAAM,OAAO,gBAAgB;AAAA,MACnD,KAAK,QAAQ,KAAK,IAAI,CAAC,MAAM,EAAE,MAAM,QAAS;AAAA,MAC9C,SAAS,EAAE,aAAa,KAAK;AAAA,IAC9B,CAAC;AAED,UAAM,kBAAkB,eACtB,IAAI,CAAC,MAAM,EAAE,MAAM,OAAO,EAC1B,OAAO,CAAC,MAAM;AACd;AAAA;AAAA,QAEC,GAAG,aAAa,gBAAgB,GAAG,SAAS;AAAA;AAAA,IAE9C,CAAC;AACF,QAAI,gBAAgB,SAAS,GAAG;AAC/B,aAAO,gBAAgB,CAAC;AAAA,IACzB;AACA,WAAO;AAAA,EACR;AACD;AAEO,MAAM,wCAAwC,CAAC,YAA0C;AAC/F,MAAI,qBAAiB,yBAAU,qBAAO,YAAY,QAAQ,OAAO,EAAE,UAAU,CAAC;AAC9E,MAAI,mBAAmB,qBAAO,UAAU,cAAc;AACtD,aAAO,sDAA2B,gBAAgB;AACnD;",
  "names": []
}
