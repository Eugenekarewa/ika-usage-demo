import { zeroNode } from "@chainsafe/persistent-merkle-tree";
import { BasicType } from "./basic.js";
export class NoneType extends BasicType {
    typeName = "none";
    byteLength = 0;
    itemsPerChunk = 32;
    fixedSize = 0;
    minSize = 0;
    maxSize = 0;
    defaultValue() {
        return null;
    }
    // bytes serdes
    value_serializeToBytes(_output, offset, _value) {
        return offset;
    }
    value_deserializeFromBytes(_data, _start) {
        return null;
    }
    tree_serializeToBytes(_output, offset, _node) {
        return offset;
    }
    tree_deserializeFromBytes(_data, _start, _end) {
        return zeroNode(0);
    }
    // Fast tree opts
    tree_getFromNode(_leafNode) {
        return null;
    }
    tree_setToNode(_leafNode, _value) {
        return;
    }
    tree_getFromPackedNode(_leafNode, _index) {
        return null;
    }
    tree_setToPackedNode(_leafNode, _index, _value) {
        return;
    }
    // JSON
    fromJson(json) {
        if (json !== null) {
            throw Error("JSON invalid type none must be null");
        }
        return null;
    }
    toJson(_value) {
        return null;
    }
}
//# sourceMappingURL=none.js.map